pipeline {
  agent any
  environment {
    IMAGE_NAME = 'flask-shopping-list'
  }
node {
  stage('Build') {
    bat 'where docker'
    bat 'docker --version'

    def IMAGE_NAME = 'flask-shopping-list'
    bat '''
      for /f %%i in ('git rev-parse --short HEAD') do set COMMIT=%%i
      echo COMMIT=%COMMIT%
      set IMAGE_TAG=%BUILD_NUMBER%-%COMMIT%
      echo IMAGE_TAG=%IMAGE_TAG%
      if not exist build mkdir build

      rem Build image
      docker build -t %IMAGE_NAME%:%IMAGE_TAG% .

      rem Record metadata (avoid Go template quoting on Windows)
      docker images --no-trunc --quiet %IMAGE_NAME%:%IMAGE_TAG% > build\\image-id.txt
      echo %IMAGE_NAME%:%IMAGE_TAG% > build\\image-tag.txt

      rem Save a portable artefact
      docker save -o build\\%IMAGE_NAME%-%IMAGE_TAG%.tar %IMAGE_NAME%:%IMAGE_TAG%
    '''
    archiveArtifacts artifacts: 'build/**', fingerprint: true
  }
}

  }

