pipeline {
  agent any
  environment {
    IMAGE_NAME = 'flask-shopping-list'  // change if you like
  }
  stages {
    stage('Checkout') {
      steps {
        checkout scm
      }
    }

    stage('Build') {
      steps {
        // optional diagnostics
        bat 'where docker'
        bat 'docker --version'

        // Compute COMMIT + IMAGE_TAG, then build and save artefact
        bat '''
          setlocal ENABLEDELAYEDEXPANSION
          for /f %%i in ('git rev-parse --short HEAD') do set COMMIT=%%i
          set IMAGE_TAG=%BUILD_NUMBER%-%COMMIT%

          if not exist build mkdir build

          docker build -t %IMAGE_NAME%:%IMAGE_TAG% .

          docker images --no-trunc --quiet %IMAGE_NAME%:%IMAGE_TAG% > build\\image-id.txt
          echo %IMAGE_NAME%:%IMAGE_TAG% > build\\image-tag.txt

          docker save -o build\\%IMAGE_NAME%-%IMAGE_TAG%.tar %IMAGE_NAME%:%IMAGE_TAG%
        '''
      }
    }

stage('Test') {
  steps {
    bat '''
      setlocal ENABLEDELAYEDEXPANSION
      for /f %%i in ('git rev-parse --short HEAD') do set COMMIT=%%i
      set IMAGE_NAME=flask-shopping-list
      set IMAGE_TAG=%BUILD_NUMBER%-%COMMIT%
      set PORT=5001

      rem --- start app container for integration smoke ---
      docker rm -f sl_test 2>nul || echo ok
      docker run -d --name sl_test -p %PORT%:5000 %IMAGE_NAME%:%IMAGE_TAG%

      rem --- wait for /health to be 200, else fail fast ---
      powershell -Command "$ErrorActionPreference='Stop'; \
        $ok=$false; \
        for($i=0;$i -lt 30;$i++){ \
          try{ \
            $r=Invoke-WebRequest http://localhost:%PORT%/health -UseBasicParsing; \
            if($r.StatusCode -eq 200){ $ok=$true; break } \
          } catch { Start-Sleep -s 2 } \
        }; \
        if(-not $ok){ Write-Error 'App did not become healthy in time'; exit 1 }"

      rem --- smoke the login page (HTTP 200 expected) ---
      powershell -Command "$ErrorActionPreference='Stop'; \
        $r=Invoke-WebRequest http://localhost:%PORT%/login -UseBasicParsing; \
        if($r.StatusCode -ne 200){ Write-Error 'Login page not OK'; exit 1 }"

      rem --- cleanup ---
      docker rm -f sl_test
    '''
  }
  post {
    failure {
      bat 'echo --- sl_test logs (if any) --- & docker logs sl_test || echo no logs & docker rm -f sl_test || exit /b 0'
    }
  }
}



    stage('Archive artefacts') {
      steps {
        archiveArtifacts artifacts: 'build/**', fingerprint: true
      }
    }
  }
}
